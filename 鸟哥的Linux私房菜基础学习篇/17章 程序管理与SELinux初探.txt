第十七章、程序管理与SELinux初探

------------------------------------------------------------------
名词：
●program                                       程序文件，通常为二进制，放置在储存媒体中，以文件的形态存在
●process                                       程序，触发后执行者的权限与属性，程序的代码与所需数据会加载到内存中，操作系统给予这个内存内的单元一个标识符(PID)
●PID                                           各进程的身份标识
●PPID                                          Parent PID 父程序身份标识
●fork-and-exec                                 过程调用的流程
●daemon                                        守护进程，服务
●port                                          端口
●client                                        客户端
●loading                                       负载
------------------------------------------------------------------
Linux 多人多环境的特色：
●多人环境
●多任务行为
●多重登入环境的七个基本终端窗口
●特殊的程序管理行为
●bash 环境下的工作管理(job control)
●多人多任务的系统资源分配问题考虑
------------------------------------------------------------------
工作管理

bash 的 job control 必须要注意的限制：
●只管理自己的 bash
●前景，可以控制和下达指令
●背景，可以自行运作的工作，无法使用 [ ^+C ] 终止，可以使用 [ bg/fg ] 呼叫该工作
●背景中执行的工作不能等待终端或 shell 的输入

job control 的管理：
●&                                             直接将指令放到背景中执行
●[ ^+Z ]                                       将当前工作放到背景中暂停
●jobs                                          观察目前的背景工作状态
●fg                                            将背景工作拿到前景处理
●bg                                            让工作在背景下的状态变成运作中
●kill                                          管理背景当中的工作
●killall                                       用于终止指定名称的工作
------------------------------------------------------------------
脱机管理问题：
●nohup                                         在脱机或注销系统后，还能继续工作
------------------------------------------------------------------
程序管理

ps -l 显示的数据项：
●F                                             表示程序旗标(process flags)
●S                                             表示这个程序的状态(STAT)，有：R(运行)、S(睡眠)、D(不可唤醒的睡眠)、T(停止)与 Z(僵尸)
●UID                                           程序所有者
●PID                                           程序 PID 号码
●PPID                                          父程序 PID 号码
●C                                             代表 CPU 使用率，单位百分比
●PRI                                           程序优先级(Priority)
●NI                                            程序优先级(Nice)
●ADDR                                          程序在内存中的位置，运行中的程序会显示 [ - ]
●SZ                                            程序使用的内存
●WCHAN                                         程序是否运行中，运行中的程序会显示 [ - ]
●TTY                                           终端机位置
●TIME                                          程序用掉的 CPU 时间
●CMD                                           程序的触发程序指令(command)

ps aux 显示的数据项：
●USER                                          程序属于哪个使用者账号
●PID                                           程序 PID 号码
●%CPU                                          程序使用的CPU资源百分比
●%MEM                                          程序使用的物理内存百分比
●VSZ                                           程序使用的虚拟内存量，单位 Kbytes
●RSS                                           程序占用的固定内存量，单位 Kbytes
●TTY                                           终端机位置
●STAT                                          程序当前状态，与 [ ps -l ] 的 S 旗标相同(R/S/D/T/Z)
●START                                         程序被触发启动时间
●TIME                                          程序用掉的 CPU 时间
●COMMAND                                       程序的实际指令
------------------------------------------------------------------
在 top 指令执行过程中可以使用的按键指令：
●?                                             显示可以输入的按键指令
●P                                             以 CPU 的使用情况排序
●M                                             以内存的使用情况排序
●N                                             以 PID 排序
●T                                             以程序使用的 CPU 时间累积(TIME+)排序
●k                                             给某个 PID 一个讯号
●r                                             给某个 PID 重设 nice 值
●q                                             离开

top 的显示内容：
●第一行 显示当前时间、开机到目前经过的时间、登入系统的用户数与第1、5、15分钟的平均负载
●第二行 显示目前程序总量与程序状态统计(running, sleeping, stopped,zombie)
●第三行 显示 CPU 的整体负载
●第四行 显示当前物理内存的使用情况 
●第五行 显示当前虚拟内存的使用情况
●第六行 在 [ top ] 程序中输入指令时，显示状态的地方

top 显示的数据项：
●PID                                           程序 PID 号码
●USER                                          程序属于哪个使用者账号
●PR                                            程序执行优先级(Priority)
●NI                                            程序执行优先级(Nice)
●%CPU                                          CPU 的使用率
●%MEM                                          内存使用率
●TIME+                                         程序使用的 CPU 时间累积
------------------------------------------------------------------
程序的工作号码：
●1                                             SIGHUP 启动被终止的程序
●2                                             SIGINT 中断程序，相当于 [ ^+c ]
●9                                             SIGKILL 强制中断程序
●15                                            SIGTERM 以正常的结束程序终止该程序
●17                                            SIGSTOP 暂停程序，相当于 [ ^+z ]
------------------------------------------------------------------
程序的执行顺序：
●PRI 值不可以修改，NI 值可以修改。PRI(new) = PRI(old) + NI
●NI 值可调整范围为 -20 ~ 19
●root 账号可以调整自己与他人的 NI 值
●一般用户只可以调整自己的 NI 值，范围为：0 ~ 19
●一般用户只能将原有的 NI 值调高
------------------------------------------------------------------
系统资源的观察

netstat 显示的因特网联机情况数据项：
●Proto                                         网络的封包协议，主要分为 TCP 与 UDP 封包
●Recv-Q                                        非由用户程序链接到此 socket 的复制癿总 bytes 数
●Send-Q                                        非由进程主机传送过来的 acknowledged 总 bytes 数
●Local Address                                 本地的 IP 地址与端口
●Foreign Address                               远程主机的 IP 地址与端口
●State                                         联机状态，主要有建立(ESTABLISED)及侦听(LISTEN)

netstat 显示的 socket file 数据项：
●Proto                                         一般就是 unix
●RefCnt                                        连接到此 socket 的程序数量
●Flags                                         联机的旗标
●Type                                          socket 存取的类型。主要有确认联机的 STREAM 与不需确认的 DGRAM 两种
●State                                         若为 CONNECTED 表示多个程序之间已经建立联机
●Path                                          连接到此 socket 的相关程序的路径，或者是相关数据输出的路径

vmstat 显示的数据项：
●procs                                         程序字段 等待中的程序数量(r) 不可被唤醒的程序数量(b)
●memory                                        内存字段 虚拟内存使用量(swpd) 未使用(free) 用于缓冲存储器(buff) 用于高速缓存(cache)
●swap                                          内存置换空间 磁盘中取出的程序数量(si) 由于内存不足而将没用到程序写入磁盘 swap 的容量(so)
●io                                            磁盘读写 每秒被中断的程序次数(in) 每秒进行的事件切换次数(cs)
●cpu                                           CPU项目 非核心层 CPU 使用状态(us) 核心层 CPU 使用状态(sy) 闲置状态(id) 等待 I/O 所耗费的 CPU 状态(wa) 被虚拟机所盗用的 CPU 使用状态(st)
------------------------------------------------------------------
相关指令：
ps                                              观察某个时间点的程序运行情况
ps aux                                          观察系统所有的程序
ps -l                                           观察自己的程序
ps -lA                                          同 [ ps -aux ]
ps axjf                                         显示程序树状态
pstree                                          同 [ ps axjf ]
pstree -A                                       列出当前系统上所有程序树的相关性
pstree -Aup                                     同时显示 PID 与 USER

top                                             动态观察程序变化

kill -signal PID                                根据某个程序的 PID 来发送讯号
killall -signal 指令名                          根据某个程序的名称来发送讯号

nice                                            新执行的程序并给予 NI 值
renice                                          调整已存在的程序 NI 值

free                                            观察内存使用情况
uname                                           查看系统与核心相关信息
uptime                                          观察系统启动时间与工作负载
netstat                                         显示与IP、TCP、UDP 和 ICMP 协议相关的统计数据，一般用于检验本机各端口的网络连接情况
dmesg                                           分析核心产生的信息
vmstat                                          侦测系统资源变化
------------------------------------------------------------------
