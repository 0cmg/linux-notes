第二十二章、软件安装：原始码与 Tarball

------------------------------------------------------------------
●开放源码                                      程序代码，写给人类看的程序语言，但机器无法执行
●编译程序                                      将程序代码转换成机器看得懂的语言
●可执行文件                                    经过编译程序变成二进制程序后，机器看得懂所以可以执行的档案
------------------------------------------------------------------
Tarball 解压后的文档一般有：
●源代码档案
●侦测程序档案(configure/config)
●软件的简易说明与安装说明(README/INSTALL)

Tarball 安装流程：
●下载 Tarball
●解压 Tarball，产生原始码档案
●以 gcc 进行原始码的编译，产生目标文件 object files
●以 gcc 进行函式库、主、子程序的链接，形成主要的二进制文件 binary file
●将二进制文件以及相关的配置文件安装到自己的主机
------------------------------------------------------------------
●Red Hat 系                                    RPM 软件管理机制与 yum 在线更新模式
●Debian 系                                     dpkg 软件管理机制与 apt 在线更新模式
------------------------------------------------------------------
相关指令：
make                                            执行一个叫 makefile 文件里的指令，make 的基本用处是自动根据 makefile 里的指令来编译源文件
configure                                       自动设定源程序以符合各种不同平台上系统的特性，并且根据系统叁数及环境产生合适的 Makefile 文件或是 C 的头文件(header file)
------------------------------------------------------------------
gcc 常用参数：
gcc -c                                          将原始码编译成为目标文件，并不制作链接等功能
gcc -O filename.c -c                            编辑时依据作业环境给予优化执行速度
gcc filename.c -lm -L/usr/lib -I/usr/include    进行二进制文件制作时，将连结的函式库与相关的路径填入
gcc -o filename filename.c                      将编译的结果输出成某个特定档名
gcc -o filename filename.c -Wall                编译时输出较多的信息说明
------------------------------------------------------------------
用 make 进行宏编译

makefile 变量的基本语法：
●变量与变量内容以 [ = ] 隔开，两边可以有空格
●变量左边不可以有缩进
●变量与变量内容在 [ = ] 两边不能有 [ : ]
●变数名最好是使用大写字母
●使用变量时，以 ${变量} 或 $(变量) 使用
●在该 shell 的环境变量是可以被套用的
●在指令列模式也可以给予变量

环境变量的取用优先级：
●make 指令列后面加上的环境变量
●makefile 里面指定的环境变量
●shell 原本具有的环境变量

特殊的变量：
●$@                                            代表当前的标的(target)
------------------------------------------------------------------
Tarball 的管理与建议

使用原始码管理软件所需要的基础软件：
●gcc 或 cc 等 C 语言编译程序(compiler)
●make 及 autoconfig 等软件
●需要 Kernel 提供的 Library 以及相关的 Include 档案

Tarball 安装的基本步骤：
●取得原始档
●取得流程步骤
●依赖属性软件安装
●建立 makefile
●编译
●安装

大部分的 Tarball 软件安装的指令下达方式：
●./configure                                   建立 makefile 档案
●make clean                                    读取 makefile 中关于 clean 的工作
●make                                          依据 makefile 中的预设工作进宪编译
●make install                                  最后的安装步骤

软件建议的安装目录：
●/usr/local                                    软件安装目录
●/usr/local/src                                原始码放置目录
------------------------------------------------------------------
相关指令：
patch                                           软件补丁工具
------------------------------------------------------------------
函式库管理

函式库类型：
●静态函式库(Static)
  扩展名为 .a
  编译时会直接整合到执行程序中
  编译成功的可执行文件可以独立执行
  升级时所有将此函式库纳入的程序都要重新编译
●动态函式库(Dynamic)
  扩展名为 .so
  编译时在程序中只有一个指向 pointer 的位置
  编译出的程序不能被独立执行
  不需要进行重新编译

函式库存放位置：
●/usr/lib
●/lib
●/lib/modules(kernel)
------------------------------------------------------------------
相关指令：
ldconfig                                        动态链接库管理命令
ldd                                             判断某个可执行的 binary 档案含有什么动态函式库

md5sum                                          使用 md5 计算和校验文件报文摘要
sha1sum                                         使用 sha1 计算和校验文件报文摘要
------------------------------------------------------------------
几种常见的加密算法
●md5                                           Message-Digest algorithm 5
●sha                                           Secure Hash Algorithm
●des                                           Data Encryption Standard
------------------------------------------------------------------
